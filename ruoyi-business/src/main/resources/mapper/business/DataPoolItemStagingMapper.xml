<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.business.mapper.DataPoolItemStaging.DataPoolItemStagingMapper">

    <resultMap type="DataPoolItem" id="DataPoolItemResult">
        <result property="id"           column="id"           />
        <result property="poolId"       column="pool_id"      />
        <result property="itemData"     column="item_data"    />
        <result property="status"       column="status"       />
        <result property="printCount"   column="print_count"  />
        <result property="deviceId"     column="device_id"    />
        <result property="receivedTime" column="received_time"/>
        <result property="delFlag"      column="del_flag"     />
        <result property="createTime"   column="create_time"  />
        <result property="updateTime"   column="update_time"  />
    </resultMap>

    <insert id="batchInsertToStaging" parameterType="java.util.List">
        insert into data_pool_item_staging (pool_id, item_data, status, print_count, received_time, del_flag, create_time, update_time)
        values
        <foreach collection="list" item="item" separator=",">
            (#{item.poolId}, #{item.itemData}, #{item.status}, #{item.printCount}, #{item.receivedTime}, #{item.delFlag}, #{item.createTime}, #{item.updateTime})
        </foreach>
    </insert>

    <select id="selectAll" resultMap="DataPoolItemResult">
        select id, pool_id, item_data, status, print_count, device_id, received_time, del_flag, create_time, update_time
        from data_pool_item_staging
        order by id asc
    </select>

    <delete id="deleteAll">
        delete from data_pool_item_staging
    </delete>

    <!-- 分批将暂存表数据插入主表（避免一次性构造长SQL） -->
    <insert id="insertFromStagingLimit">
        insert into data_pool_item (pool_id, item_data, status, print_count, received_time, del_flag, create_time, update_time)
        select pool_id, item_data, status, print_count, received_time, del_flag, create_time, update_time
        from data_pool_item_staging
        order by rowid asc
        limit #{batchSize}
    </insert>

    <!-- 分批从暂存表删除与上面的 insert 匹配（按rowid） -->
    <delete id="deleteFromStagingByRowIdLimit">
        delete from data_pool_item_staging
        where rowid in (
            select rowid from data_pool_item_staging
            order by rowid asc
            limit #{batchSize}
        )
    </delete>
</mapper>
