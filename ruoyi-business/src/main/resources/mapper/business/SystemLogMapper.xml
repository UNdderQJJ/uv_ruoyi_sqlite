<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.business.mapper.SystemLog.SystemLogMapper">

    <resultMap id="SystemLogResult" type="com.ruoyi.business.domain.SystemLog.SystemLog">
        <id    column="id"          property="id"/>
        <result column="log_time"    property="logTime"/>
        <result column="log_type"    property="logType"/>
        <result column="task_id"     property="taskId"/>
        <result column="task_name"   property="taskName"/>
        <result column="device_id"   property="deviceId"/>
        <result column="device_name" property="deviceName"/>
        <result column="pool_id"     property="poolId"/>
        <result column="pool_name"   property="poolName"/>
        <result column="log_level"   property="logLevel"/>
        <result column="content"     property="content"/>
    </resultMap>

    <!-- 列表查询（按条件） -->
    <select id="selectList" parameterType="com.ruoyi.business.domain.SystemLog.SystemLog" resultMap="SystemLogResult">
        SELECT *
        FROM system_log
        <where>
            <if test="logType != null and logType != ''"> AND log_type = #{logType} </if>
            <if test="logLevel != null and logLevel != ''"> AND log_level = #{logLevel} </if>
            <if test="taskId != null"> AND task_id = #{taskId} </if>
            <if test="deviceId != null"> AND device_id = #{deviceId} </if>
            <if test="poolId != null"> AND pool_id = #{poolId} </if>
            <if test="taskName != null and taskName != ''"> AND task_name LIKE '%' || #{taskName} || '%' </if>
            <if test="deviceName != null and deviceName != ''"> AND device_name LIKE '%' || #{deviceName} || '%' </if>
            <if test="poolName != null and poolName != ''"> AND pool_name LIKE '%' || #{poolName} || '%' </if>
        </where>
        ORDER BY log_time DESC
    </select>

    <!-- 统计数量（按条件） -->
    <select id="count" parameterType="com.ruoyi.business.domain.SystemLog.SystemLog" resultType="int">
        SELECT COUNT(1)
        FROM system_log
        <where>
            <if test="logType != null and logType != ''"> AND log_type = #{logType} </if>
            <if test="logLevel != null and logLevel != ''"> AND log_level = #{logLevel} </if>
            <if test="taskId != null"> AND task_id = #{taskId} </if>
            <if test="deviceId != null"> AND device_id = #{deviceId} </if>
            <if test="poolId != null"> AND pool_id = #{poolId} </if>
        </where>
    </select>

    <!-- 新增日志 -->
    <insert id="insertSystemLog" parameterType="com.ruoyi.business.domain.SystemLog.SystemLog" useGeneratedKeys="true" keyProperty="id">
    INSERT INTO system_log (
        log_type,
        task_id,
        task_name,
        device_id,
        device_name,
        pool_id,
        pool_name,
        log_level,
        content
    ) VALUES (
        #{logType},
        #{taskId},
        <if test="taskId != null">
            (SELECT name FROM task_info WHERE id = #{taskId})
        </if>
        <if test="taskId == null">
            NULL
        </if>,
        #{deviceId},
        <if test="deviceId != null">
            (SELECT name FROM device_info WHERE id = #{deviceId})
        </if>
        <if test="deviceId == null">
            NULL
        </if>,
        #{poolId},
        <if test="poolId != null">
            (SELECT pool_name FROM data_pool WHERE id = #{poolId})
        </if>
        <if test="poolId == null">
            NULL
        </if>,
        #{logLevel},
        #{content}
    )
</insert>

    <!-- 批量新增日志 -->
    <insert id="batchInsert">
        INSERT INTO system_log (
            log_time, log_type, task_id, task_name, device_id, device_name, pool_id, pool_name, log_level, content
        ) VALUES
        <foreach collection="list" item="item" separator=",">
            (COALESCE(#{item.logTime}, datetime('now','localtime')), #{item.logType}, #{item.taskId}, #{item.taskName}, #{item.deviceId}, #{item.deviceName}, #{item.poolId}, #{item.poolName}, #{item.logLevel}, #{item.content})
        </foreach>
    </insert>

    <!-- 批量删除日志 -->
    <delete id="deleteByIds">
        DELETE FROM system_log WHERE id IN
        <foreach collection="ids" item="id" open="(" separator="," close=")"> #{id} </foreach>
    </delete>

    <!-- 根据ID查询 -->
    <select id="selectById" parameterType="long" resultMap="SystemLogResult">
        SELECT * FROM system_log WHERE id = #{id}
    </select>

    <!-- 分页查询日志（支持多条件过滤和排序） -->
    <select id="selectPageList" parameterType="com.ruoyi.business.domain.SystemLog.SystemLog" resultMap="SystemLogResult">
        SELECT *
        FROM system_log
        <where>
            <if test="logType != null and logType != ''"> AND log_type = #{logType} </if>
            <if test="logLevel != null and logLevel != ''"> AND log_level = #{logLevel} </if>
            <if test="taskId != null"> AND task_id = #{taskId} </if>
            <if test="deviceId != null"> AND device_id = #{deviceId} </if>
            <if test="poolId != null"> AND pool_id = #{poolId} </if>
            <if test="taskName != null and taskName != ''"> AND task_name LIKE '%' || #{taskName} || '%' </if>
            <if test="deviceName != null and deviceName != ''"> AND device_name LIKE '%' || #{deviceName} || '%' </if>
            <if test="poolName != null and poolName != ''"> AND pool_name LIKE '%' || #{poolName} || '%' </if>
            <if test="content != null and content != ''"> AND content LIKE '%' || #{content} || '%' </if>
        </where>
        ORDER BY log_time DESC
    </select>

    <!-- 游标分页查询日志（高性能，适合大数据量） -->
    <select id="selectCursorPageList" resultMap="SystemLogResult">
        SELECT *
        FROM system_log
        <where>
            <if test="query.logType != null and query.logType != ''"> AND log_type = #{query.logType} </if>
            <if test="query.logLevel != null and query.logLevel != ''"> AND log_level = #{query.logLevel} </if>
            <if test="query.taskId != null"> AND task_id = #{query.taskId} </if>
            <if test="query.deviceId != null"> AND device_id = #{query.deviceId} </if>
            <if test="query.poolId != null"> AND pool_id = #{query.poolId} </if>
            <if test="query.taskName != null and query.taskName != ''"> AND task_name LIKE '%' || #{query.taskName} || '%' </if>
            <if test="query.deviceName != null and query.deviceName != ''"> AND device_name LIKE '%' || #{query.deviceName} || '%' </if>
            <if test="query.poolName != null and query.poolName != ''"> AND pool_name LIKE '%' || #{query.poolName} || '%' </if>
            <if test="query.content != null and query.content != ''"> AND content LIKE '%' || #{query.content} || '%' </if>
            <!-- 游标分页条件 -->
            <if test="cursorQuery.lastId != null">
                AND id &lt; #{cursorQuery.lastId}
            </if>
            <if test="cursorQuery.lastLogTime != null and cursorQuery.lastLogTime != ''">
                AND log_time &lt; #{cursorQuery.lastLogTime}
            </if>
        </where>
        ORDER BY log_time DESC, id DESC
        LIMIT #{cursorQuery.pageSize}
    </select>

    <!-- 查询需要归档的旧日志（限制数量，按时间倒序，便于分批处理） -->
    <select id="selectOldLogs" resultMap="SystemLogResult">
        SELECT *
        FROM system_log
        WHERE log_time &lt;= #{cutoff}
        ORDER BY log_time ASC
        LIMIT #{limit}
    </select>

    <!-- 确保归档表存在（仅SQLite生效，其他DB可忽略返回0） -->
    <update id="ensureArchiveTable">
        CREATE TABLE IF NOT EXISTS system_log_archived (
            id INTEGER PRIMARY KEY,
            log_time TEXT NOT NULL,
            log_type TEXT,
            task_id INTEGER,
            task_name TEXT,
            device_id INTEGER,
            device_name TEXT,
            pool_id INTEGER,
            pool_name TEXT,
            log_level TEXT NOT NULL,
            content TEXT NOT NULL,
            archive_time TEXT DEFAULT (datetime('now','localtime'))
        );
        CREATE INDEX IF NOT EXISTS idx_archived_log_time ON system_log_archived (log_time DESC);
        CREATE INDEX IF NOT EXISTS idx_archived_log_type_level ON system_log_archived (log_type, log_level);
    </update>

</mapper>


